AudioWorkletProcessor.prototype._C2=function(){this._D2=true;this.port.onmessage=(_E2)=>{if(_E2.data==="kill")this._D2=false;};};class _F2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._C2();}process(_G2,_H2,parameters){const _I2=_G2[0];for(let c=0;c<_I2.length;++c){const _J2=_I2[c];for(let _K2=0;_K2<_J2.length;++_K2)_H2[parameters.bypass[_K2]??parameters.bypass[0]][c][_K2]=_J2[_K2];
}return this._D2;}}class _L2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._C2();}process(_G2,_H2,parameters){const _M2=_G2[0];const _N2=_G2[1];const _O2=_H2[0];const gain=parameters.gain;for(let c=0;c<_N2.length;++c){const _J2=_N2[c];const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2)_P2[_K2]=_J2[_K2];}for(let c=0;c<_M2.length;++c){const _J2=_M2[c];const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2)_P2[_K2]+=_J2[_K2]*(gain[_K2]??gain[0]);
}return this._D2;}}registerProcessor("audio-bus-input",_F2);registerProcessor("audio-bus-output",_L2);class _Q2 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100},{name:"resolution",automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",
defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _R2=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_S2){super();this._C2();const _T2=_S2.outputChannelCount[0];this._U2=new Float32Array(_T2);this._V2=new Uint32Array(_T2);}process(_G2,_H2,parameters){const _I2=_G2[0];const _O2=_H2[0];const bypass=parameters.bypass;const gain=parameters.gain;const factor=parameters.factor;const resolution=parameters.resolution;const mix=parameters.mix;for(let c=0;c<_I2.length;
++c){const _J2=_I2[c];const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2){_P2[_K2]=_J2[_K2];if(this._V2[c]===0)this._U2[c]=_J2[_K2];++this._V2[c];this._V2[c]%=(factor[_K2]??factor[0]);if(bypass[_K2]??bypass[0])continue;let _W2=this._U2[c];const _X2=(gain[_K2]??gain[0]);_W2*=_X2;_W2=Math.max(Math.min(_W2,1.0),-1.0);const _Y2=resolution[_K2]??resolution[0];const max=(_W2>0.0)?_Q2._R2[_Y2]-1:_Q2._R2[_Y2];_W2=Math.round(_W2*max)/max;const _Z2=(mix[_K2]??mix[0]);_P2[_K2]*=(1.0-_Z2);_P2[_K2]+=(_W2*_Z2);}}return this._D2;
}}registerProcessor("bitcrusher-processor",_Q2);class __2 extends AudioWorkletProcessor{static _03=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:__2._03},{name:"feedback",automationRate:"a-rate",defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_S2){super();this._C2();
const _T2=_S2.outputChannelCount[0];const _13=(__2._03*sampleRate)+1;this.buffer=new Array(_T2);this._23=new Uint32Array(_T2);for(let c=0;c<_T2;++c)this.buffer[c]=new Float32Array(_13);}process(_G2,_H2,parameters){const _I2=_G2[0];const _O2=_H2[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;const mix=parameters.mix;for(let c=0;c<_I2.length;++c){const _J2=_I2[c];const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2){_P2[_K2]=_J2[_K2];const _33=this._43(c,(time[_K2]??time[0]));
const _53=_J2[_K2]+(_33*(feedback[_K2]??feedback[0]));this.write(c,_53);if((bypass[_K2]??bypass[0]))continue;const _Z2=(mix[_K2]??mix[0]);_P2[_K2]*=(1-_Z2);_P2[_K2]+=(_33*_Z2);}}return this._D2;}_43(_63,_73){const _83=_73*sampleRate;let _93=(this._23[_63]-~~_83);let _a3=(_93-1);while(_93<0)_93+=this.buffer[_63].length;while(_a3<0)_a3+=this.buffer[_63].length;const frac=_83-~~_83;const _b3=this.buffer[_63][_93];const _c3=this.buffer[_63][_a3];return _b3+(_c3-_b3)*frac;}write(_63,_d3){++this._23[_63];this._23[_63]%=this.buffer[_63].length;
this.buffer[_63][this._23[_63]]=_d3;}}registerProcessor("delay-processor",__2);class _e3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,minValue:0.0}];}constructor(){super();this._C2();}process(_G2,_H2,parameters){const _I2=_G2[0];const _O2=_H2[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let c=0;c<_I2.length;++c){const _J2=_I2[c];const _P2=_O2[c];
for(let _K2=0;_K2<_J2.length;++_K2){_P2[_K2]=_J2[_K2];if(bypass[_K2]??bypass[0])continue;_P2[_K2]*=(gain[_K2]??gain[0]);}}return this._D2;}}registerProcessor("gain-processor",_e3);class _f3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _g3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,_g3),minValue:10.0,maxValue:_g3},{name:"q",automationRate:"a-rate",
defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_S2){super();this._C2();const _T2=_S2.outputChannelCount[0];this._h3=0;this._i3=0;this._j3=0;this._k3=0;this._l3=0;this._m3=new Float32Array(_T2);this._n3=new Float32Array(_T2);this._o3=new Float32Array(_T2);this._p3=new Float32Array(_T2);this._q3=-1;this._r3=-1;}process(_G2,_H2,parameters){const _I2=_G2[0];const _O2=_H2[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _s3=(cutoff.length===1&&q.length===1);
if(_s3)this._t3(cutoff[0],q[0]);for(let c=0;c<_I2.length;++c){const _J2=_I2[c];const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2){if(!_s3)this._t3(cutoff[_K2]??cutoff[0],q[_K2]??q[0]);const _u3=this._j3*_J2[_K2]+this._k3*this._m3[c]+this._l3*this._n3[c]-this._h3*this._o3[c]-this._i3*this._p3[c];this._n3[c]=this._m3[c];this._m3[c]=_J2[_K2];this._p3[c]=this._o3[c];this._o3[c]=_u3;_P2[_K2]=(bypass[_K2]??bypass[0])?_J2[_K2]:_u3;}}return this._D2;}_t3(_v3,_w3){if(_v3===this._q3&&_w3===this._r3)return;const _x3=2*Math.PI*_v3/sampleRate;
const alpha=Math.sin(_x3)/(2*_w3);const _y3=Math.cos(_x3);const _z3=1+alpha;const _h3=-2*_y3;const _i3=1-alpha;const _j3=(1+_y3)/2;const _k3=-1-_y3;const _l3=(1+_y3)/2;this._h3=_h3/_z3;this._i3=_i3/_z3;this._j3=_j3/_z3;this._k3=_k3/_z3;this._l3=_l3/_z3;this._q3=_v3;this._r3=_w3;}}registerProcessor("hpf2-processor",_f3);class _A3 extends AudioWorkletProcessor{static get parameterDescriptors(){const _g3=Math.min(sampleRate/2.0,20000.0);return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}
,{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_g3),minValue:10.0,maxValue:_g3},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_S2){super();this._C2();const _T2=_S2.outputChannelCount[0];this._h3=0;this._i3=0;this._j3=0;this._k3=0;this._l3=0;this._m3=new Float32Array(_T2);this._n3=new Float32Array(_T2);this._o3=new Float32Array(_T2);this._p3=new Float32Array(_T2);this._q3=-1;this._r3=-1;}process(_G2,_H2,parameters){const _I2=_G2[0];const _O2=_H2[0];
const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _s3=(cutoff.length===1&&q.length===1);if(_s3)this._t3(cutoff[0],q[0]);for(let c=0;c<_I2.length;++c){const _J2=_I2[c];const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2){if(!_s3)this._t3(cutoff[_K2]??cutoff[0],q[_K2]??q[0]);const _u3=this._j3*_J2[_K2]+this._k3*this._m3[c]+this._l3*this._n3[c]-this._h3*this._o3[c]-this._i3*this._p3[c];this._n3[c]=this._m3[c];this._m3[c]=_J2[_K2];this._p3[c]=this._o3[c];this._o3[c]=_u3;
_P2[_K2]=(bypass[_K2]??bypass[0])?_J2[_K2]:_u3;}}return this._D2;}_t3(_v3,_w3){if(_v3===this._q3&&_w3===this._r3)return;const _x3=2*Math.PI*_v3/sampleRate;const alpha=Math.sin(_x3)/(2*_w3);const _y3=Math.cos(_x3);const _z3=1+alpha;const _h3=-2*_y3;const _i3=1-alpha;const _j3=(1-_y3)/2;const _k3=1-_y3;const _l3=(1-_y3)/2;this._h3=_h3/_z3;this._i3=_i3/_z3;this._j3=_j3/_z3;this._k3=_k3/_z3;this._l3=_l3/_z3;this._q3=_v3;this._r3=_w3;}}registerProcessor("lpf2-processor",_A3);class _B3{constructor(_C3){this._D3=0;
this._E3=0;this.feedback=0;this._F3=0;this.buffer=new Float32Array(_C3);this._G3=0;}process(_d3){const out=this.buffer[this._G3];this._F3=(this._F3*this._D3)+(out*this._E3);this.buffer[this._G3]=_d3+(this._F3*this.feedback);++this._G3;this._G3%=this.buffer.length;return out;}_H3(_I3){this.feedback=Math.min(Math.max(0,_I3),1);}_J3(_K3){this._D3=Math.min(Math.max(0,_K3),1);this._E3=1-this._D3;}}class _L3{constructor(_C3){this.feedback=0;this.buffer=new Float32Array(_C3);this._G3=0;}process(_d3){const out=this.buffer[this._G3];
this.buffer[this._G3]=_d3+(out*this.feedback);++this._G3;this._G3%=this.buffer.length;return(out-_d3);}_H3(_I3){this.feedback=Math.min(Math.max(0,_I3),1);}}class _M3 extends AudioWorkletProcessor{static _N3=8;static _O3=4;static _P3=0.015;static _Q3=0.4;static _R3=0.28;static _S3=0.7;static _T3=[1116,1188,1277,1356,1422,1491,1557,1617];static _U3=[1139,1211,1300,1379,1445,1514,1580,1640];static _V3=[556,441,341,225];static _W3=[579,464,364,248];static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",
defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_S2){super();this._C2();const _T2=_S2.outputChannelCount[0];this._X3=-1;this._Y3=-1;this._Z3=new Array(_T2);this.__3=new Array(_T2);const _04=[_M3._T3,_M3._U3];const _14=[_M3._V3,_M3._W3];for(let c=0;c<_T2;++c){
this._Z3[c]=new Array(_M3._N3);this.__3[c]=new Array(_M3._O3);for(let i=0;i<_M3._N3;++i)this._Z3[c][i]=new _B3(_04[c%_04.length][i]);for(let i=0;i<_M3._O3;++i)this.__3[c][i]=new _L3(_14[c%_14.length][i]);}this._24(0.5);this._J3(0.5);for(let c=0;c<_T2;++c)for(let i=0;i<_M3._O3;++i)this.__3[c][i]._H3(0.5);}process(_G2,_H2,parameters){const _I2=_G2[0];const _O2=_H2[0];const bypass=parameters.bypass;const size=parameters.size;const damp=parameters.damp;const mix=parameters.mix;for(let c=0;c<_I2.length;++c){const _J2=_I2[c];
const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2){this._24(size[_K2]??size[0]);this._J3(damp[_K2]??damp[0]);_P2[_K2]=_J2[_K2];let out=0;const _W2=_J2[_K2]*_M3._P3;for(let i=0;i<_M3._N3;++i)out+=this._Z3[c][i].process(_W2);for(let i=0;i<_M3._O3;++i)out=this.__3[c][i].process(out);if(bypass[_K2]??bypass[0])continue;const _Z2=(mix[_K2]??mix[0]);_P2[_K2]*=(1-_Z2);_P2[_K2]+=(out*_Z2);}}return this._D2;}_24(_C3){if(_C3===this._X3)return;const size=(_C3*_M3._R3)+_M3._S3;for(let c=0;c<this._Z3.length;++c)for(let i=0;
i<_M3._N3;++i)this._Z3[c][i]._H3(size);this._X3=_C3;}_J3(_K3){if(_K3===this._Y3)return;const damp=_K3*_M3._Q3;for(let c=0;c<this._Z3.length;++c)for(let i=0;i<_M3._N3;++i)this._Z3[c][i]._J3(damp);this._Y3=_K3;}}registerProcessor("reverb1-processor",_M3);class _34 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,minValue:0.0,maxValue:20.0},{name:"intensity",
automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_S2){super();this._C2();const _T2=_S2.outputChannelCount[0];this._44=new Array(_T2).fill(1.0);this._54=new Array(_T2).fill(0.0);this._64=new Array(_T2).fill(_74._84._94);this._a4=new Array(_T2);for(let c=0;c<_T2;++c){this._a4[c]=new _b4();this._a4[c]._c4(sampleRate);
this._a4[c]._d4(this._44[c]);this._a4[c]._e4(this._64[c]);if(c%2===1){this._a4[c]._f4(this._54[c]);}}}process(_G2,_H2,parameters){const _I2=_G2[0];const _O2=_H2[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let c=0;c<_I2.length;++c){const _J2=_I2[c];const _P2=_O2[c];for(let _K2=0;_K2<_J2.length;++_K2){_P2[_K2]=_J2[_K2];const _Y2=rate[_K2]??rate[0];const _g4=offset[_K2]??offset[0];const _h4=shape[_K2]??shape[0];
this._i4(c,_Y2,_g4,_h4);const _j4=this._a4[c]._43();if((bypass[_K2]??bypass[0])>0.0){continue;}const i=intensity[_K2]??intensity[0];const out=_J2[_K2]*_j4*i;_P2[_K2]*=(1.0-i);_P2[_K2]+=out;}}return this._D2;}_i4(_63,_k4,_l4,_m4){if(_k4!==this._44[_63]){this._a4[_63]._d4(_k4);this._44[_63]=_k4;}if(_l4!==this._54[_63]){if(_63%2===1){this._a4[_63]._f4(_l4);}this._54[_63]=_l4;}if(_m4!==this._64[_63]){this._a4[_63]._e4(_m4);this._64[_63]=_m4;}}}registerProcessor("tremolo-processor",_34);function _74(){}_74._84={
_94:0,_n4:1,_o4:2,_p4:3,_q4:4,_r4:5};_74._s4=function(_t4){return 1.0-_t4;};_74._u4=function(_t4){return _t4;};_74._v4=function(_t4){return 0.5*(Math.sin((_t4*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_74._w4=function(_t4){if(_t4<0.5){return 0.0;}return 1.0;};_74._x4=function(_t4){if(_t4<0.5){return 2.0*_t4;}return 2.0-(2.0*_t4);};_74._y4=[_74._s4,_74._u4,_74._v4,_74._w4,_74._x4];_z4._A4=512;_z4._B4=1.0/_z4._A4;function _z4(_C4){this.data=new Float32Array(_z4._A4);for(let i=0;i<_z4._A4;++i){this.data[i]=_C4(i*_z4._B4);
}}_z4.prototype._43=function(_t4){_t4=Math.max(0.0,_t4);_t4=Math.min(_t4,1.0);const _D4=_t4*_z4._A4;const _E4=~~_D4;const _F4=_D4-_E4;let _93=_E4;let _a3=_93+1;if(_93>=_z4._A4){_93-=_z4._A4;}if(_a3>=_z4._A4){_a3-=_z4._A4;}const _b3=this.data[_93];const _c3=this.data[_a3];return _b3+(_c3-_b3)*_F4;};_b4._G4=[];_b4._H4=false;_b4._I4=0.0;_b4._J4=20.0;function _b4(){this._K4=48000;this.shape=_74._84._o4;this._L4=1.0;this._M4=0.0;this._B4=0.0;this._N4=0.0;if(_b4._H4==true){return;}for(let i=0;i<_74._84._r4;++i){
_b4._G4[i]=new _z4(_74._y4[i]);}_b4._H4=true;}_b4._O4=function(){return(_b4._H4==true);};_b4.prototype._c4=function(_P4){this._K4=_P4;this._Q4();};_b4.prototype._d4=function(_R4){_R4=Math.max(_b4._I4,_R4);_R4=Math.min(_R4,_b4._J4);this._L4=_R4;this._Q4();};_b4.prototype._f4=function(_l4){_l4=Math.max(0.0,_l4);_l4=Math.min(_l4,1.0);const _S4=_l4-this._N4;this._N4=_l4;this._M4+=_S4;while(this._M4>=1.0){this._M4-=1.0;}while(this._M4<0.0){this._M4+=1.0;}};_b4.prototype._e4=function(_m4){_m4=Math.max(0,
_m4);_m4=Math.min(_m4,_74._84._r4-1);this.shape=_m4;};_b4.prototype._43=function(){const result=_b4._G4[this.shape]._43(this._M4);this._M4+=this._B4;while(this._M4>=1.0){this._M4-=1.0;}return result;};_b4.prototype._Q4=function(){this._B4=this._L4/this._K4;};